(function (Santander) {
    let Task;
    (function (Task) {
        "use strict";
        let currSeconds = 0;
        let formContext;
        let taskForm = {
            fields: {
                llamarA: "to",
                referenteA: "regardingobjectid",
                nombreCliente: "fullname",
                buc: "cxm_bucid"


            },
            timeline: "Timeline",

        }

        // FunciÃƒÆ’Ã‚Â³n para setear el valor de referente a si el valor de llamar a es tipo contacto
        // Autor: Rebeca Lizzet Galvan Benitez
        // Fecha: 15 marzo 2023
        // Modificacion: -- -- ----
        Santander.Task.SetReferenteA = async function (executionContext) {
            const formContext = executionContext.getFormContext();

            let contactLlamarA = formContext.getAttribute(taskForm.fields.llamarA).getValue();

            if (contactLlamarA.length > 0 && contactLlamarA[0].entityType === "contact")
                formContext.getAttribute(taskForm.fields.referenteA).setValue(contactLlamarA);
            else
                formContext.getAttribute(taskForm.fields.referenteA).setValue(null);
        }

        Santander.Task.ShowhideSubgridContactabilidad = async function (executionContext) {
            let formContext = executionContext.getFormContext();// get the form Context ontiene toda la informaciÃƒÂ³n del formulario.
            let subject = formContext.getAttribute("subject").getValue();// get the value of accountname obtiene
            let medioContacto = subject.split(' ').slice(-1)[0]; // obtener la ÃƒÂºltima palabra de asunto.

            if (medioContacto == "CITA") {

                formContext.getControl('grid_cita').setVisible(true);//Show Subgrid
                formContext.getControl('grid_correo').setVisible(false);//Hide Subgrid
                formContext.getControl('grid_llamada_sms').setVisible(false);//Hide Subgrid
                formContext.getControl('grid_visita').setVisible(false);//Hide Subgrid

            }
            else if (medioContacto == "VISITA") {
                formContext.getControl('grid_cita').setVisible(false);
                formContext.getControl('grid_correo').setVisible(false);
                formContext.getControl('grid_llamada_sms').setVisible(false);
                formContext.getControl('grid_visita').setVisible(true);

            }
            else if (medioContacto == "EMAIL") {
                formContext.getControl('grid_cita').setVisible(false);
                formContext.getControl('grid_correo').setVisible(true);
                formContext.getControl('grid_llamada_sms').setVisible(false);
                formContext.getControl('grid_visita').setVisible(false);
            }
            else if (medioContacto == "SMS") {
                formContext.getControl('grid_cita').setVisible(false);
                formContext.getControl('grid_correo').setVisible(false);
                formContext.getControl('grid_llamada_sms').setVisible(true);
                formContext.getControl('grid_visita').setVisible(false);
            }
            else if (medioContacto == "LLAMADA") {
                formContext.getControl('grid_cita').setVisible(false);
                formContext.getControl('grid_correo').setVisible(false);
                formContext.getControl('grid_llamada_sms').setVisible(true);
                formContext.getControl('grid_visita').setVisible(false);
            }
            else {
                formContext.getControl('grid_cita').setVisible(false);
                formContext.getControl('grid_correo').setVisible(false);
                formContext.getControl('grid_llamada_sms').setVisible(false);
                formContext.getControl('grid_visita').setVisible(false);
            }

        }

        Santander.Task.FichaClienteAC = async function (executionContext) {
            const formContext = executionContext.getFormContext();
            const dataEje = Xrm.Utility.getGlobalContext().userSettings;
            const usuarioid = dataEje.userId.substring(1, dataEje.userId.length - 1);
            let clienteid = formContext.data.entity.getId();
            let nombreCliente = formContext.getAttribute(taskForm.fields.nombreCliente).getValue();
            let buc = formContext.getAttribute(taskForm.fields.buc).getValue();
            let tipoOption = 1;
            // Parameters
            fetch(Xrm.Utility.getGlobalContext().getClientUrl() + "/api/data/v9.2/cxm_AuditoriaFichaCliente", {
                method: "POST",
                headers: {
                    "OData-MaxVersion": "4.0",
                    "OData-Version": "4.0",
                    "Content-Type": "application/json; charset=utf-8",
                    "Accept": "application/json"
                },
                body: JSON.stringify({
                    nombreCliente,
                    usuarioid,
                    clienteid,
                    texto: "visualizo la ficha del cliente ",
                    buc,
                    tipoOption
                })
            }).then(
                function success(response) {
                    return response.json().then((json) => { if (response.ok) { return [response, json]; } else { throw json.error; } });
                }
            ).then(function (responseObjects) {
                let response = responseObjects[0];
                let responseBody = responseObjects[1];
                let result = responseBody;
                let status = result["status"]; // Edm.String
                if(status.Id){
                    // Refrescar timeline
                    formContext.getControl(taskForm.fields.timeline).refresh();
                }
            }).catch(function (error) {
                console.log(error.message);
            })
        }
        Santander.Task.gestionarACC = async function (executionContext) {
            const formContext = executionContext.getFormContext();
            const dataEje = Xrm.Utility.getGlobalContext().userSettings;
            const usuarioid = dataEje.userId.substring(1, dataEje.userId.length - 1);
            let clienteid = formContext.data.entity.getId();
            let nombreCliente = formContext.getAttribute(taskForm.fields.nombreCliente).getValue();
            let buc = formContext.getAttribute(taskForm.fields.buc).getValue();
            let tipoOption = 1;
            // Parameters
            fetch(Xrm.Utility.getGlobalContext().getClientUrl() + "/api/data/v9.2/cxm_AuditoriaFichaCliente", {
                method: "POST",
                headers: {
                    "OData-MaxVersion": "4.0",
                    "OData-Version": "4.0",
                    "Content-Type": "application/json; charset=utf-8",
                    "Accept": "application/json"
                },
                body: JSON.stringify({
                    nombreCliente,
                    usuarioid,
                    clienteid,
                    texto: "visualizÃ³ las ACC del cliente ",
                    buc,
                    tipoOption
                })
            }).then(
                function success(response) {
                    return response.json().then((json) => { if (response.ok) { return [response, json]; } else { throw json.error; } });
                }
            ).then(function (responseObjects) {
                let response = responseObjects[0];
                let responseBody = responseObjects[1];
                let result = responseBody;
                let status = result["status"]; // Edm.String
                if(status.Id){
                    // Refrescar timeline
                    formContext.getControl(taskForm.fields.timeline).refresh();
                }
            }).catch(function (error) {
                console.log(error.message);
            })
        }

    })(Task = Santander.Task || (Santander.Task = {}));
})(window.Santander = window.Santander || {});
